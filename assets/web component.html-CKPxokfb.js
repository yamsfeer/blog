import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,b as n,d as s,e as a,a as l}from"./app-BPFsuHku.js";const i={},r=l(`<h1 id="web-component" tabindex="-1"><a class="header-anchor" href="#web-component"><span>web component</span></a></h1><p>web component 是一系列 web 标准的集合。包括：</p><ul><li>custom element</li><li>shadow dom</li><li>html template</li><li>es module</li></ul><p>一个 web component 大概如下：</p><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> template <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span>
template<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;style&gt;
    .my-component { font-size: 20px }
  &lt;/style&gt;
  &lt;div class=&quot;my-component&quot;&gt;hello world&lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>shadowRoot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> open <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 创建一个 shadow dom</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 渲染</span>
  <span class="token punctuation">}</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> content <span class="token operator">=</span> template<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 获取模板</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>shadowRoot<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token comment">// 挂载节点</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

window<span class="token punctuation">.</span>customElement<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;my-component&#39;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span>
</code></pre></div><p>在 html 中使用如下。</p><div class="language-html" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>注意，自定义元素的名称必须包含连词线，用与区别原生的 HTML 元素，且不能用自闭合标签。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,9),u={href:"https://www.robinwieruch.de/web-components-tutorial/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://web.dev/custom-elements-v1/",target:"_blank",rel:"noopener noreferrer"};function k(d,h){const t=o("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[n("a",u,[s("Web Components Tutorial for Beginners"),a(t)])]),n("p",null,[n("a",m,[s("Custom Elements v1 - Reusable Web Components"),a(t)])])])}const y=e(i,[["render",k],["__file","web component.html.vue"]]),b=JSON.parse('{"path":"/API/web%20component.html","title":"web component","lang":"zh-CN","frontmatter":{"description":"web component web component 是一系列 web 标准的集合。包括： custom element shadow dom html template es module 一个 web component 大概如下： 在 html 中使用如下。 注意，自定义元素的名称必须包含连词线，用与区别原生的 HTML 元素，且不能用自闭合标...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-fe/API/web%20component.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"web component"}],["meta",{"property":"og:description","content":"web component web component 是一系列 web 标准的集合。包括： custom element shadow dom html template es module 一个 web component 大概如下： 在 html 中使用如下。 注意，自定义元素的名称必须包含连词线，用与区别原生的 HTML 元素，且不能用自闭合标..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T16:21:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T16:21:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"web component\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T16:21:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1712938892000,"updatedTime":1712938892000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":0.55,"words":165},"filePathRelative":"API/web component.md","localizedDate":"2024年4月12日","autoDesc":true}');export{y as comp,b as data};
