import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,a as t}from"./app-BPFsuHku.js";const e={},p=t(`<h1 id="js-异常监控" tabindex="-1"><a class="header-anchor" href="#js-异常监控"><span>JS 异常监控</span></a></h1><h2 id="异常捕获" tabindex="-1"><a class="header-anchor" href="#异常捕获"><span>异常捕获</span></a></h2><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// error</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token function">report</span><span class="token punctuation">(</span><span class="token function">normalize</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// unhandled rejection</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;unhandledrejection&#39;</span><span class="token punctuation">,</span> <span class="token parameter">reject</span> <span class="token operator">=&gt;</span> <span class="token function">report</span><span class="token punctuation">(</span><span class="token function">normalize</span><span class="token punctuation">(</span>reject<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><p>onerror 和 addEventListener 的区别。</p><h3 id="script-error" tabindex="-1"><a class="header-anchor" href="#script-error"><span>script error</span></a></h3><p>处于安全的考虑，浏览器会隐藏来自跨域JS的错误。</p><p>解决办法：</p><ol><li><p>为 script 添加 crossorigin</p><div class="language-html" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xx.com/xx.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>anonymous<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div></li><li><p>添加跨域头</p><div class="language-http" data-ext="http" data-title="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">access-allow-origin</span><span class="token punctuation">:</span> <span class="token header-value">*</span></span>
</code></pre></div></li></ol><h2 id="堆栈解析" tabindex="-1"><a class="header-anchor" href="#堆栈解析"><span>堆栈解析</span></a></h2><h2 id="异常聚合" tabindex="-1"><a class="header-anchor" href="#异常聚合"><span>异常聚合</span></a></h2><p>将 error 相关的信息提取为指纹 fingerprint</p><h2 id="自动分配处理人" tabindex="-1"><a class="header-anchor" href="#自动分配处理人"><span>自动分配处理人</span></a></h2><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> blame <span class="token parameter variable">-L</span> <span class="token operator">&lt;</span>range<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>
</code></pre></div><h2 id="异常报警" tabindex="-1"><a class="header-anchor" href="#异常报警"><span>异常报警</span></a></h2>`,15),o=[p];function r(c,l){return n(),s("div",null,o)}const d=a(e,[["render",r],["__file","4.JS异常监控.html.vue"]]),h=JSON.parse('{"path":"/%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7/4.JS%E5%BC%82%E5%B8%B8%E7%9B%91%E6%8E%A7.html","title":"JS 异常监控","lang":"zh-CN","frontmatter":{"description":"JS 异常监控 异常捕获 onerror 和 addEventListener 的区别。 script error 处于安全的考虑，浏览器会隐藏来自跨域JS的错误。 解决办法： 为 script 添加 crossorigin 添加跨域头 堆栈解析 异常聚合 将 error 相关的信息提取为指纹 fingerprint 自动分配处理人 异常报警","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-fe/%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7/4.JS%E5%BC%82%E5%B8%B8%E7%9B%91%E6%8E%A7.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"JS 异常监控"}],["meta",{"property":"og:description","content":"JS 异常监控 异常捕获 onerror 和 addEventListener 的区别。 script error 处于安全的考虑，浏览器会隐藏来自跨域JS的错误。 解决办法： 为 script 添加 crossorigin 添加跨域头 堆栈解析 异常聚合 将 error 相关的信息提取为指纹 fingerprint 自动分配处理人 异常报警"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T16:21:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T16:21:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS 异常监控\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T16:21:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"异常捕获","slug":"异常捕获","link":"#异常捕获","children":[{"level":3,"title":"script error","slug":"script-error","link":"#script-error","children":[]}]},{"level":2,"title":"堆栈解析","slug":"堆栈解析","link":"#堆栈解析","children":[]},{"level":2,"title":"异常聚合","slug":"异常聚合","link":"#异常聚合","children":[]},{"level":2,"title":"自动分配处理人","slug":"自动分配处理人","link":"#自动分配处理人","children":[]},{"level":2,"title":"异常报警","slug":"异常报警","link":"#异常报警","children":[]}],"git":{"createdTime":1712938892000,"updatedTime":1712938892000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":0.41,"words":124},"filePathRelative":"工程架构/前端监控/4.JS异常监控.md","localizedDate":"2024年4月12日","autoDesc":true}');export{d as comp,h as data};
