import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c,b as e,d as t,e as n,a as s}from"./app-BPFsuHku.js";const i={},l=s('<h1 id="fid-首次输入延迟" tabindex="-1"><a class="header-anchor" href="#fid-首次输入延迟"><span>FID 首次输入延迟</span></a></h1><h2 id="什么是-fid" tabindex="-1"><a class="header-anchor" href="#什么是-fid"><span>什么是 FID</span></a></h2><p>FID ( First Input Delay ) 首次输入延迟，从用户第一次与页面交互，到浏览器能开始处理的时间。</p><h2 id="什么是输入延迟" tabindex="-1"><a class="header-anchor" href="#什么是输入延迟"><span>什么是输入延迟</span></a></h2><p>下图是一个典型的网页加载时间轴：</p><p><img src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/9tm3f6pwlHMqNKuFvaP0.svg" alt="示例页面加载跟踪"></p><p>页面发出网络资源请求，资源下载完后，在主线程上进行处理 ( 图中黄色块 )，此时主线程处于忙碌状态，无法响应用户输入，因而产生输入延迟 ( input delay )。</p><p>FID 通常发生在 FCP 和 TTI 之间，因为在这期间，页面已经渲染出部分内容，但交互还不可靠。</p><p>为了说明这种情况，我们在时间轴中加入 FCP 和 TTI。</p><p><img src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/24Y3T5sWNuZD9fKhkuER.svg" alt="带有 FCP 和 TTI 的示例页面加载跟踪"></p><p>图中 FCP 和 TTI 之间有三段长任务 ( 执行时间超过 50ms )，假设用户在最长的任务刚开始时交互，就会产生如下图所示的 input delay。</p><p><img src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/krOoeuQ4TWCbt9t6v5Wf.svg" alt="带有 FCP、TTI 和 FID 的示例页面加载跟踪"></p><h3 id="如果交互没有事件监听器" tabindex="-1"><a class="header-anchor" href="#如果交互没有事件监听器"><span>如果交互没有事件监听器</span></a></h3><p>FID 测量的是 input 的时间点到主线程下一次空闲的时间点的差值。也就是说，即使没有注册监听器，FID 也可以测量。</p><p>事实上，许多交互的执行并不需要监听器，但需要主线程处于空闲期。例如，input、textarea、select 等元素都需要主线程空闲才能响应。</p><h3 id="为什么只考虑首次输入" tabindex="-1"><a class="header-anchor" href="#为什么只考虑首次输入"><span>为什么只考虑首次输入</span></a></h3><p>FID 是用户对网站响应速度的第一印象，这对于塑造整体印象至关重要。</p><h3 id="fid-的输入类型" tabindex="-1"><a class="header-anchor" href="#fid-的输入类型"><span>FID 的输入类型</span></a></h3><p>FID 只关注 click、tap 和 keystroke 等不连续的操作，不关心 scroll 和 resize 等连续操作。</p>',19),d={href:"https://web.dev/rail/",target:"_blank",rel:"noopener noreferrer"},u=s(`<h2 id="fid-阈值" tabindex="-1"><a class="header-anchor" href="#fid-阈值"><span>FID 阈值</span></a></h2><img src="https://raw.githubusercontent.com/yamsfeer/pic-bed/master/Se4TiXIdp8jtLJVScWed.svg" alt="好的 fid 值为 2.5 秒，差的值大于 4.0 秒，中间的任何值都需要改进" width="400" class="img-mid"><h2 id="如何测量-fid" tabindex="-1"><a class="header-anchor" href="#如何测量-fid"><span>如何测量 FID</span></a></h2><div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">PerformanceObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> obs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstInput<span class="token punctuation">]</span> <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">getEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> firstInputDelay <span class="token operator">=</span> firstInput<span class="token punctuation">.</span>processingStart <span class="token operator">-</span> firstInput<span class="token punctuation">.</span>startTime
  <span class="token keyword">const</span> firstInputDuration <span class="token operator">=</span> firstInput<span class="token punctuation">.</span>duration

  obs<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;first-input&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">buffered</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="如何改进-fid" tabindex="-1"><a class="header-anchor" href="#如何改进-fid"><span>如何改进 FID</span></a></h2><p>改进 FID 方法：</p>`,6),h={href:"https://developer.chrome.com/docs/lighthouse/performance/third-party-summary/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://developer.chrome.com/docs/lighthouse/performance/bootup-time/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://developer.chrome.com/docs/lighthouse/performance/mainthread-work-breakdown/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.chrome.com/docs/lighthouse/performance/resource-summary/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://web.dev/optimize-fid/",target:"_blank",rel:"noopener noreferrer"};function I(D,F){const a=o("ExternalLinkIcon");return r(),c("div",null,[l,e("p",null,[t("换句话说，FID 侧重于 "),e("a",d,[t("RAIL 性能模型"),n(a)]),t("中的 R ( 响应度 )，而 scroll 和 resize 与 A ( 动画 ) 更为相关，这些操作的性能应该单独进行评估。")]),u,e("ul",null,[e("li",null,[e("a",h,[t("减少第三方代码的影响"),n(a)])]),e("li",null,[e("a",m,[t("减少 JavaScript 执行时间"),n(a)])]),e("li",null,[e("a",f,[t("最小化主线程工作"),n(a)])]),e("li",null,[e("a",k,[t("保持较低的请求数和较小的传输大小"),n(a)])])]),e("p",null,[t("深入了解如何改进 FID 请参阅"),e("a",g,[t("优化 FID"),n(a)]),t("。")])])}const _=p(i,[["render",I],["__file","FID.html.vue"]]),v=JSON.parse('{"path":"/%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/FID.html","title":"FID 首次输入延迟","lang":"zh-CN","frontmatter":{"description":"FID 首次输入延迟 什么是 FID FID ( First Input Delay ) 首次输入延迟，从用户第一次与页面交互，到浏览器能开始处理的时间。 什么是输入延迟 下图是一个典型的网页加载时间轴： 示例页面加载跟踪 页面发出网络资源请求，资源下载完后，在主线程上进行处理 ( 图中黄色块 )，此时主线程处于忙碌状态，无法响应用户输入，因而产生输入...","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-fe/%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/FID.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"FID 首次输入延迟"}],["meta",{"property":"og:description","content":"FID 首次输入延迟 什么是 FID FID ( First Input Delay ) 首次输入延迟，从用户第一次与页面交互，到浏览器能开始处理的时间。 什么是输入延迟 下图是一个典型的网页加载时间轴： 示例页面加载跟踪 页面发出网络资源请求，资源下载完后，在主线程上进行处理 ( 图中黄色块 )，此时主线程处于忙碌状态，无法响应用户输入，因而产生输入..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/yamsfeer/pic-bed/master/9tm3f6pwlHMqNKuFvaP0.svg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T16:21:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T16:21:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FID 首次输入延迟\\",\\"image\\":[\\"https://raw.githubusercontent.com/yamsfeer/pic-bed/master/9tm3f6pwlHMqNKuFvaP0.svg\\",\\"https://raw.githubusercontent.com/yamsfeer/pic-bed/master/24Y3T5sWNuZD9fKhkuER.svg\\",\\"https://raw.githubusercontent.com/yamsfeer/pic-bed/master/krOoeuQ4TWCbt9t6v5Wf.svg\\"],\\"dateModified\\":\\"2024-04-12T16:21:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是 FID","slug":"什么是-fid","link":"#什么是-fid","children":[]},{"level":2,"title":"什么是输入延迟","slug":"什么是输入延迟","link":"#什么是输入延迟","children":[{"level":3,"title":"如果交互没有事件监听器","slug":"如果交互没有事件监听器","link":"#如果交互没有事件监听器","children":[]},{"level":3,"title":"为什么只考虑首次输入","slug":"为什么只考虑首次输入","link":"#为什么只考虑首次输入","children":[]},{"level":3,"title":"FID 的输入类型","slug":"fid-的输入类型","link":"#fid-的输入类型","children":[]}]},{"level":2,"title":"FID 阈值","slug":"fid-阈值","link":"#fid-阈值","children":[]},{"level":2,"title":"如何测量 FID","slug":"如何测量-fid","link":"#如何测量-fid","children":[]},{"level":2,"title":"如何改进 FID","slug":"如何改进-fid","link":"#如何改进-fid","children":[]}],"git":{"createdTime":1712938892000,"updatedTime":1712938892000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":2.16,"words":647},"filePathRelative":"工程架构/性能优化/FID.md","localizedDate":"2024年4月12日","autoDesc":true}');export{_ as comp,v as data};
