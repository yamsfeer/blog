import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c as i,b as e,d as a,e as n,a as s}from"./app-BPFsuHku.js";const c={},d=s('<h1 id="自动化方案" tabindex="-1"><a class="header-anchor" href="#自动化方案"><span>自动化方案</span></a></h1><h2 id="组件化" tabindex="-1"><a class="header-anchor" href="#组件化"><span>组件化</span></a></h2><p>组件化就是基于可复用目的，将一个大的软件系统按照分离关注点的形式，拆分成多个独立的组件，主要目的是减少耦合。</p><h3 id="基础组件" tabindex="-1"><a class="header-anchor" href="#基础组件"><span>基础组件</span></a></h3><h3 id="业务组件" tabindex="-1"><a class="header-anchor" href="#业务组件"><span>业务组件</span></a></h3><h2 id="低代码概述" tabindex="-1"><a class="header-anchor" href="#低代码概述"><span>低代码概述</span></a></h2><h3 id="tob-型低代码" tabindex="-1"><a class="header-anchor" href="#tob-型低代码"><span>toB 型低代码</span></a></h3><h3 id="toc-型低代码" tabindex="-1"><a class="header-anchor" href="#toc-型低代码"><span>toC 型低代码</span></a></h3><h3 id="低代码调试" tabindex="-1"><a class="header-anchor" href="#低代码调试"><span>低代码调试</span></a></h3><h3 id="低代码抽象" tabindex="-1"><a class="header-anchor" href="#低代码抽象"><span>低代码抽象</span></a></h3><h3 id="逻辑编排" tabindex="-1"><a class="header-anchor" href="#逻辑编排"><span>逻辑编排</span></a></h3><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h3>',12),h={href:"https://github.com/ascoders/weekly/blob/master/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF/197.%E7%B2%BE%E8%AF%BB%E3%80%8A%E4%BD%8E%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91%E7%BC%96%E6%8E%92%E3%80%8B.md",target:"_blank",rel:"noopener noreferrer"},p={href:"https://juejin.cn/post/7276837017231835136",target:"_blank",rel:"noopener noreferrer"},E=e("h2",{id:"ui-to-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ui-to-code"},[e("span",null,"UI to Code")])],-1),m=e("h2",{id:"ai-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ai-code"},[e("span",null,"AI Code")])],-1);function u(A,_){const t=l("ExternalLinkIcon");return r(),i("div",null,[d,e("p",null,[e("a",h,[a("低代码逻辑编排"),n(t)])]),e("p",null,[e("a",p,[a("低代码架构和原理 - juejin.cn"),n(t)])]),E,m])}const B=o(c,[["render",u],["__file","自动化方案.html.vue"]]),b=JSON.parse('{"path":"/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%96%B9%E6%A1%88/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%96%B9%E6%A1%88.html","title":"自动化方案","lang":"zh-CN","frontmatter":{"description":"自动化方案 组件化 组件化就是基于可复用目的，将一个大的软件系统按照分离关注点的形式，拆分成多个独立的组件，主要目的是减少耦合。 基础组件 业务组件 低代码概述 toB 型低代码 toC 型低代码 低代码调试 低代码抽象 逻辑编排 参考 低代码逻辑编排 低代码架构和原理 - juejin.cn UI to Code AI Code","head":[["meta",{"property":"og:url","content":"https://yamsfeer.github.io/notes-fe/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%96%B9%E6%A1%88/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"yamsfeer"}],["meta",{"property":"og:title","content":"自动化方案"}],["meta",{"property":"og:description","content":"自动化方案 组件化 组件化就是基于可复用目的，将一个大的软件系统按照分离关注点的形式，拆分成多个独立的组件，主要目的是减少耦合。 基础组件 业务组件 低代码概述 toB 型低代码 toC 型低代码 低代码调试 低代码抽象 逻辑编排 参考 低代码逻辑编排 低代码架构和原理 - juejin.cn UI to Code AI Code"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T16:21:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T16:21:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自动化方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T16:21:32.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"组件化","slug":"组件化","link":"#组件化","children":[{"level":3,"title":"基础组件","slug":"基础组件","link":"#基础组件","children":[]},{"level":3,"title":"业务组件","slug":"业务组件","link":"#业务组件","children":[]}]},{"level":2,"title":"低代码概述","slug":"低代码概述","link":"#低代码概述","children":[{"level":3,"title":"toB 型低代码","slug":"tob-型低代码","link":"#tob-型低代码","children":[]},{"level":3,"title":"toC 型低代码","slug":"toc-型低代码","link":"#toc-型低代码","children":[]},{"level":3,"title":"低代码调试","slug":"低代码调试","link":"#低代码调试","children":[]},{"level":3,"title":"低代码抽象","slug":"低代码抽象","link":"#低代码抽象","children":[]},{"level":3,"title":"逻辑编排","slug":"逻辑编排","link":"#逻辑编排","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}]},{"level":2,"title":"UI to Code","slug":"ui-to-code","link":"#ui-to-code","children":[]},{"level":2,"title":"AI Code","slug":"ai-code","link":"#ai-code","children":[]}],"git":{"createdTime":1712938892000,"updatedTime":1712938892000,"contributors":[{"name":"yamsfeer","email":"feer.yams@gmail.com","commits":1}]},"readingTime":{"minutes":0.56,"words":167},"filePathRelative":"解决方案/自动化方案/自动化方案.md","localizedDate":"2024年4月12日","autoDesc":true}');export{B as comp,b as data};
